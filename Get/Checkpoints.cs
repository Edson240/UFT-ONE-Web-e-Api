//------------------------------------------------------------------------------
// <auto-generated>
//     O código foi gerado por uma ferramenta.
//     Versão de Tempo de Execução:4.0.30319.42000
//
//     As alterações ao arquivo poderão causar comportamento incorreto e serão perdidas se
//     o código for gerado novamente.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Script
{
    using System;
    using System.Xml;
    using System.Xml.Schema;
    using System.Collections.Generic;
    using HP.ST.Fwk.RunTimeFWK;
    using HP.ST.Fwk.RunTimeFWK.CheckpointFWK;
    using HP.ST.Fwk.RunTimeFWK.Utilities;
    using HP.ST.Ext.CheckpointLogicOperators;
    using HP.ST.Ext.BindingImpl.Getters;
    using HP.ST.Ext.BindingImpl.Setters;
    using HP.ST.Fwk.RunTimeFWK.BindingFWK;
    using HP.ST.Fwk.RunTimeFWK.BindingFWK.Getters;
    using HP.ST.Fwk.RunTimeFWK.BindingFWK.Setters;
    using HP.ST.Fwk.RunTimeFWK.BindingFWK.PropInfo;
    
    
    public partial class WorkFlowScript
    {
        
        private void set_HTTPActivity4_checkpoints(STActivityBase activity)
        {
            // Checkpoint 1
            IVTDGetter actualValueGetter1 = new VTDObjectGetter(new VTDPropertyInfoBase("StatusCode"));
            IVTDSetter actualValueSetter1 = new VTDCheckpointSetter(XmlTypeCode.Int);
            BindDirection actualBindDirection1 = new BindDirection(_flow.HTTPActivity4, actualValueGetter1, actualValueSetter1);
            CpValObj valueActualObject1 = new CpValObj(actualBindDirection1, XmlTypeCode.Int, false);
            CpValObj valueExpectedObject1 = new CpValObj("200", XmlTypeCode.Int);
            ValueCPRule cpRule1 = new ValueCPRule(valueActualObject1, valueExpectedObject1, PrimitiveTypeCP.EqualTo, "=", false);
            activity.AddCheckpointRule(cpRule1);

            // Checkpoint 2
            IVTDGetter actualValueGetter2 = new VTDXPathGetter(new VTDPropertyInfoBase("XMLResponse", "/*[local-name(.)='Object'][1]/*[local-name(.)='class'][1]"), XmlTypeCode.String, false);
            IVTDSetter actualValueSetter2 = new VTDCheckpointSetter(XmlTypeCode.String);
            BindDirection actualBindDirection2 = new BindDirection(_flow.HTTPActivity4, actualValueGetter2, actualValueSetter2);
            CpValObj valueActualObject2 = new CpValObj(actualBindDirection2, XmlTypeCode.String, false);
            CpValObj valueExpectedObject2 = new CpValObj("com.ca.lisa.demo.CarInventory", XmlTypeCode.String);
            ValueCPRule cpRule2 = new ValueCPRule(valueActualObject2, valueExpectedObject2, StringCP.EqualTo, "=", false);
            activity.AddCheckpointRule(cpRule2);

            // Checkpoint 3
            IVTDGetter actualValueGetter3 = new VTDXPathGetter(new VTDPropertyInfoBase("XMLResponse", "/*[local-name(.)='Object'][1]/*[local-name(.)='id'][1]"), XmlTypeCode.UnsignedByte, false);
            IVTDSetter actualValueSetter3 = new VTDCheckpointSetter(XmlTypeCode.UnsignedByte);
            BindDirection actualBindDirection3 = new BindDirection(_flow.HTTPActivity4, actualValueGetter3, actualValueSetter3);
            CpValObj valueActualObject3 = new CpValObj(actualBindDirection3, XmlTypeCode.UnsignedByte, false);
            CpValObj valueExpectedObject3 = new CpValObj("2", XmlTypeCode.UnsignedByte);
            ValueCPRule cpRule3 = new ValueCPRule(valueActualObject3, valueExpectedObject3, PrimitiveTypeCP.EqualTo, "=", false);
            activity.AddCheckpointRule(cpRule3);

            // Checkpoint 4
            IVTDGetter actualValueGetter4 = new VTDXPathGetter(new VTDPropertyInfoBase("XMLResponse", "/*[local-name(.)='Object'][1]/*[local-name(.)='carTrim'][1]"), XmlTypeCode.String, false);
            IVTDSetter actualValueSetter4 = new VTDCheckpointSetter(XmlTypeCode.String);
            BindDirection actualBindDirection4 = new BindDirection(_flow.HTTPActivity4, actualValueGetter4, actualValueSetter4);
            CpValObj valueActualObject4 = new CpValObj(actualBindDirection4, XmlTypeCode.String, false);
            CpValObj valueExpectedObject4 = new CpValObj("Technology", XmlTypeCode.String);
            ValueCPRule cpRule4 = new ValueCPRule(valueActualObject4, valueExpectedObject4, StringCP.EqualTo, "=", false);
            activity.AddCheckpointRule(cpRule4);

            // Checkpoint 5
            IVTDGetter actualValueGetter5 = new VTDXPathGetter(new VTDPropertyInfoBase("XMLResponse", "/*[local-name(.)='Object'][1]/*[local-name(.)='color'][1]"), XmlTypeCode.String, false);
            IVTDSetter actualValueSetter5 = new VTDCheckpointSetter(XmlTypeCode.String);
            BindDirection actualBindDirection5 = new BindDirection(_flow.HTTPActivity4, actualValueGetter5, actualValueSetter5);
            CpValObj valueActualObject5 = new CpValObj(actualBindDirection5, XmlTypeCode.String, false);
            CpValObj valueExpectedObject5 = new CpValObj("Black", XmlTypeCode.String);
            ValueCPRule cpRule5 = new ValueCPRule(valueActualObject5, valueExpectedObject5, StringCP.EqualTo, "=", false);
            activity.AddCheckpointRule(cpRule5);

            // Checkpoint 6
            IVTDGetter actualValueGetter6 = new VTDXPathGetter(new VTDPropertyInfoBase("XMLResponse", "/*[local-name(.)='Object'][1]/*[local-name(.)='engine'][1]"), XmlTypeCode.String, false);
            IVTDSetter actualValueSetter6 = new VTDCheckpointSetter(XmlTypeCode.String);
            BindDirection actualBindDirection6 = new BindDirection(_flow.HTTPActivity4, actualValueGetter6, actualValueSetter6);
            CpValObj valueActualObject6 = new CpValObj(actualBindDirection6, XmlTypeCode.String, false);
            CpValObj valueExpectedObject6 = new CpValObj("3.2 V6", XmlTypeCode.String);
            ValueCPRule cpRule6 = new ValueCPRule(valueActualObject6, valueExpectedObject6, StringCP.EqualTo, "=", false);
            activity.AddCheckpointRule(cpRule6);

            // Checkpoint 7
            IVTDGetter actualValueGetter7 = new VTDXPathGetter(new VTDPropertyInfoBase("XMLResponse", "/*[local-name(.)='Object'][1]/*[local-name(.)='image1'][1]"), XmlTypeCode.String, false);
            IVTDSetter actualValueSetter7 = new VTDCheckpointSetter(XmlTypeCode.String);
            BindDirection actualBindDirection7 = new BindDirection(_flow.HTTPActivity4, actualValueGetter7, actualValueSetter7);
            CpValObj valueActualObject7 = new CpValObj(actualBindDirection7, XmlTypeCode.String, false);
            CpValObj valueExpectedObject7 = new CpValObj("inventory2.jpg", XmlTypeCode.String);
            ValueCPRule cpRule7 = new ValueCPRule(valueActualObject7, valueExpectedObject7, StringCP.EqualTo, "=", false);
            activity.AddCheckpointRule(cpRule7);

            // Checkpoint 8
            IVTDGetter actualValueGetter8 = new VTDXPathGetter(new VTDPropertyInfoBase("XMLResponse", "/*[local-name(.)='Object'][1]/*[local-name(.)='image2'][1]"), XmlTypeCode.String, false);
            IVTDSetter actualValueSetter8 = new VTDCheckpointSetter(XmlTypeCode.String);
            BindDirection actualBindDirection8 = new BindDirection(_flow.HTTPActivity4, actualValueGetter8, actualValueSetter8);
            CpValObj valueActualObject8 = new CpValObj(actualBindDirection8, XmlTypeCode.String, false);
            CpValObj valueExpectedObject8 = new CpValObj("cars/interior2.jpg", XmlTypeCode.String);
            ValueCPRule cpRule8 = new ValueCPRule(valueActualObject8, valueExpectedObject8, StringCP.EqualTo, "=", false);
            activity.AddCheckpointRule(cpRule8);

            // Checkpoint 9
            IVTDGetter actualValueGetter9 = new VTDXPathGetter(new VTDPropertyInfoBase("XMLResponse", "/*[local-name(.)='Object'][1]/*[local-name(.)='makeid'][1]"), XmlTypeCode.UnsignedByte, false);
            IVTDSetter actualValueSetter9 = new VTDCheckpointSetter(XmlTypeCode.UnsignedByte);
            BindDirection actualBindDirection9 = new BindDirection(_flow.HTTPActivity4, actualValueGetter9, actualValueSetter9);
            CpValObj valueActualObject9 = new CpValObj(actualBindDirection9, XmlTypeCode.UnsignedByte, false);
            CpValObj valueExpectedObject9 = new CpValObj("1", XmlTypeCode.UnsignedByte);
            ValueCPRule cpRule9 = new ValueCPRule(valueActualObject9, valueExpectedObject9, PrimitiveTypeCP.EqualTo, "=", false);
            activity.AddCheckpointRule(cpRule9);

            // Checkpoint 10
            IVTDGetter actualValueGetter10 = new VTDXPathGetter(new VTDPropertyInfoBase("XMLResponse", "/*[local-name(.)='Object'][1]/*[local-name(.)='milage'][1]"), XmlTypeCode.UnsignedShort, false);
            IVTDSetter actualValueSetter10 = new VTDCheckpointSetter(XmlTypeCode.UnsignedShort);
            BindDirection actualBindDirection10 = new BindDirection(_flow.HTTPActivity4, actualValueGetter10, actualValueSetter10);
            CpValObj valueActualObject10 = new CpValObj(actualBindDirection10, XmlTypeCode.UnsignedShort, false);
            CpValObj valueExpectedObject10 = new CpValObj("30650", XmlTypeCode.UnsignedShort);
            ValueCPRule cpRule10 = new ValueCPRule(valueActualObject10, valueExpectedObject10, PrimitiveTypeCP.EqualTo, "=", false);
            activity.AddCheckpointRule(cpRule10);

            // Checkpoint 11
            IVTDGetter actualValueGetter11 = new VTDXPathGetter(new VTDPropertyInfoBase("XMLResponse", "/*[local-name(.)='Object'][1]/*[local-name(.)='modelYear'][1]"), XmlTypeCode.UnsignedShort, false);
            IVTDSetter actualValueSetter11 = new VTDCheckpointSetter(XmlTypeCode.UnsignedShort);
            BindDirection actualBindDirection11 = new BindDirection(_flow.HTTPActivity4, actualValueGetter11, actualValueSetter11);
            CpValObj valueActualObject11 = new CpValObj(actualBindDirection11, XmlTypeCode.UnsignedShort, false);
            CpValObj valueExpectedObject11 = new CpValObj("2013", XmlTypeCode.UnsignedShort);
            ValueCPRule cpRule11 = new ValueCPRule(valueActualObject11, valueExpectedObject11, PrimitiveTypeCP.EqualTo, "=", false);
            activity.AddCheckpointRule(cpRule11);

            // Checkpoint 12
            IVTDGetter actualValueGetter12 = new VTDXPathGetter(new VTDPropertyInfoBase("XMLResponse", "/*[local-name(.)='Object'][1]/*[local-name(.)='modelid'][1]"), XmlTypeCode.UnsignedByte, false);
            IVTDSetter actualValueSetter12 = new VTDCheckpointSetter(XmlTypeCode.UnsignedByte);
            BindDirection actualBindDirection12 = new BindDirection(_flow.HTTPActivity4, actualValueGetter12, actualValueSetter12);
            CpValObj valueActualObject12 = new CpValObj(actualBindDirection12, XmlTypeCode.UnsignedByte, false);
            CpValObj valueExpectedObject12 = new CpValObj("2", XmlTypeCode.UnsignedByte);
            ValueCPRule cpRule12 = new ValueCPRule(valueActualObject12, valueExpectedObject12, PrimitiveTypeCP.EqualTo, "=", false);
            activity.AddCheckpointRule(cpRule12);

            // Checkpoint 13
            IVTDGetter actualValueGetter13 = new VTDXPathGetter(new VTDPropertyInfoBase("XMLResponse", "/*[local-name(.)='Object'][1]/*[local-name(.)='options'][1]"), XmlTypeCode.String, false);
            IVTDSetter actualValueSetter13 = new VTDCheckpointSetter(XmlTypeCode.String);
            BindDirection actualBindDirection13 = new BindDirection(_flow.HTTPActivity4, actualValueGetter13, actualValueSetter13);
            CpValObj valueActualObject13 = new CpValObj(actualBindDirection13, XmlTypeCode.String, false);
            CpValObj valueExpectedObject13 = new CpValObj("Leather, Navigation, Ski/BikeRack", XmlTypeCode.String);
            ValueCPRule cpRule13 = new ValueCPRule(valueActualObject13, valueExpectedObject13, StringCP.EqualTo, "=", false);
            activity.AddCheckpointRule(cpRule13);

            // Checkpoint 14
            IVTDGetter actualValueGetter14 = new VTDXPathGetter(new VTDPropertyInfoBase("XMLResponse", "/*[local-name(.)='Object'][1]/*[local-name(.)='owners'][1]"), XmlTypeCode.UnsignedByte, false);
            IVTDSetter actualValueSetter14 = new VTDCheckpointSetter(XmlTypeCode.UnsignedByte);
            BindDirection actualBindDirection14 = new BindDirection(_flow.HTTPActivity4, actualValueGetter14, actualValueSetter14);
            CpValObj valueActualObject14 = new CpValObj(actualBindDirection14, XmlTypeCode.UnsignedByte, false);
            CpValObj valueExpectedObject14 = new CpValObj("2", XmlTypeCode.UnsignedByte);
            ValueCPRule cpRule14 = new ValueCPRule(valueActualObject14, valueExpectedObject14, PrimitiveTypeCP.EqualTo, "=", false);
            activity.AddCheckpointRule(cpRule14);

            // Checkpoint 15
            IVTDGetter actualValueGetter15 = new VTDXPathGetter(new VTDPropertyInfoBase("XMLResponse", "/*[local-name(.)='Object'][1]/*[local-name(.)='price'][1]"), XmlTypeCode.UnsignedShort, false);
            IVTDSetter actualValueSetter15 = new VTDCheckpointSetter(XmlTypeCode.UnsignedShort);
            BindDirection actualBindDirection15 = new BindDirection(_flow.HTTPActivity4, actualValueGetter15, actualValueSetter15);
            CpValObj valueActualObject15 = new CpValObj(actualBindDirection15, XmlTypeCode.UnsignedShort, false);
            CpValObj valueExpectedObject15 = new CpValObj("30995", XmlTypeCode.UnsignedShort);
            ValueCPRule cpRule15 = new ValueCPRule(valueActualObject15, valueExpectedObject15, PrimitiveTypeCP.EqualTo, "=", false);
            activity.AddCheckpointRule(cpRule15);

            // Checkpoint 16
            IVTDGetter actualValueGetter16 = new VTDXPathGetter(new VTDPropertyInfoBase("XMLResponse", "/*[local-name(.)='Object'][1]/*[local-name(.)='stockNumber'][1]"), XmlTypeCode.String, false);
            IVTDSetter actualValueSetter16 = new VTDCheckpointSetter(XmlTypeCode.String);
            BindDirection actualBindDirection16 = new BindDirection(_flow.HTTPActivity4, actualValueGetter16, actualValueSetter16);
            CpValObj valueActualObject16 = new CpValObj(actualBindDirection16, XmlTypeCode.String, false);
            CpValObj valueExpectedObject16 = new CpValObj("RA2356/1", XmlTypeCode.String);
            ValueCPRule cpRule16 = new ValueCPRule(valueActualObject16, valueExpectedObject16, StringCP.EqualTo, "=", false);
            activity.AddCheckpointRule(cpRule16);

            // Checkpoint 17
            IVTDGetter actualValueGetter17 = new VTDXPathGetter(new VTDPropertyInfoBase("XMLResponse", "/*[local-name(.)='Object'][1]/*[local-name(.)='transmission'][1]"), XmlTypeCode.String, false);
            IVTDSetter actualValueSetter17 = new VTDCheckpointSetter(XmlTypeCode.String);
            BindDirection actualBindDirection17 = new BindDirection(_flow.HTTPActivity4, actualValueGetter17, actualValueSetter17);
            CpValObj valueActualObject17 = new CpValObj(actualBindDirection17, XmlTypeCode.String, false);
            CpValObj valueExpectedObject17 = new CpValObj("Auto", XmlTypeCode.String);
            ValueCPRule cpRule17 = new ValueCPRule(valueActualObject17, valueExpectedObject17, StringCP.EqualTo, "=", false);
            activity.AddCheckpointRule(cpRule17);

            // Checkpoint 18
            IVTDGetter actualValueGetter18 = new VTDXPathGetter(new VTDPropertyInfoBase("XMLResponse", "/*[local-name(.)='Object'][1]/*[local-name(.)='vin'][1]"), XmlTypeCode.String, false);
            IVTDSetter actualValueSetter18 = new VTDCheckpointSetter(XmlTypeCode.String);
            BindDirection actualBindDirection18 = new BindDirection(_flow.HTTPActivity4, actualValueGetter18, actualValueSetter18);
            CpValObj valueActualObject18 = new CpValObj(actualBindDirection18, XmlTypeCode.String, false);
            CpValObj valueExpectedObject18 = new CpValObj("1ZVBP8AM1D5256900", XmlTypeCode.String);
            ValueCPRule cpRule18 = new ValueCPRule(valueActualObject18, valueExpectedObject18, StringCP.EqualTo, "=", false);
            activity.AddCheckpointRule(cpRule18);

            // Checkpoint 19
            IVTDGetter actualValueGetter19 = new VTDXPathGetter(new VTDPropertyInfoBase("XMLResponse", "/*[local-name(.)='Object'][1]/*[local-name(.)='dealer'][1]/*[local-name(.)='class'][1]"), XmlTypeCode.String, false);
            IVTDSetter actualValueSetter19 = new VTDCheckpointSetter(XmlTypeCode.String);
            BindDirection actualBindDirection19 = new BindDirection(_flow.HTTPActivity4, actualValueGetter19, actualValueSetter19);
            CpValObj valueActualObject19 = new CpValObj(actualBindDirection19, XmlTypeCode.String, false);
            CpValObj valueExpectedObject19 = new CpValObj("com.ca.lisa.demo.CarDealer", XmlTypeCode.String);
            ValueCPRule cpRule19 = new ValueCPRule(valueActualObject19, valueExpectedObject19, StringCP.EqualTo, "=", false);
            activity.AddCheckpointRule(cpRule19);

            // Checkpoint 20
            IVTDGetter actualValueGetter20 = new VTDXPathGetter(new VTDPropertyInfoBase("XMLResponse", "/*[local-name(.)='Object'][1]/*[local-name(.)='dealer'][1]/*[local-name(.)='id'][1]"), XmlTypeCode.UnsignedByte, false);
            IVTDSetter actualValueSetter20 = new VTDCheckpointSetter(XmlTypeCode.UnsignedByte);
            BindDirection actualBindDirection20 = new BindDirection(_flow.HTTPActivity4, actualValueGetter20, actualValueSetter20);
            CpValObj valueActualObject20 = new CpValObj(actualBindDirection20, XmlTypeCode.UnsignedByte, false);
            CpValObj valueExpectedObject20 = new CpValObj("2", XmlTypeCode.UnsignedByte);
            ValueCPRule cpRule20 = new ValueCPRule(valueActualObject20, valueExpectedObject20, PrimitiveTypeCP.EqualTo, "=", false);
            activity.AddCheckpointRule(cpRule20);

            // Checkpoint 21
            IVTDGetter actualValueGetter21 = new VTDXPathGetter(new VTDPropertyInfoBase("XMLResponse", "/*[local-name(.)='Object'][1]/*[local-name(.)='dealer'][1]/*[local-name(.)='address'][1]"), XmlTypeCode.String, false);
            IVTDSetter actualValueSetter21 = new VTDCheckpointSetter(XmlTypeCode.String);
            BindDirection actualBindDirection21 = new BindDirection(_flow.HTTPActivity4, actualValueGetter21, actualValueSetter21);
            CpValObj valueActualObject21 = new CpValObj(actualBindDirection21, XmlTypeCode.String, false);
            CpValObj valueExpectedObject21 = new CpValObj("3800 Motor City Dr", XmlTypeCode.String);
            ValueCPRule cpRule21 = new ValueCPRule(valueActualObject21, valueExpectedObject21, StringCP.EqualTo, "=", false);
            activity.AddCheckpointRule(cpRule21);

            // Checkpoint 22
            IVTDGetter actualValueGetter22 = new VTDXPathGetter(new VTDPropertyInfoBase("XMLResponse", "/*[local-name(.)='Object'][1]/*[local-name(.)='dealer'][1]/*[local-name(.)='city'][1]"), XmlTypeCode.String, false);
            IVTDSetter actualValueSetter22 = new VTDCheckpointSetter(XmlTypeCode.String);
            BindDirection actualBindDirection22 = new BindDirection(_flow.HTTPActivity4, actualValueGetter22, actualValueSetter22);
            CpValObj valueActualObject22 = new CpValObj(actualBindDirection22, XmlTypeCode.String, false);
            CpValObj valueExpectedObject22 = new CpValObj("Denver", XmlTypeCode.String);
            ValueCPRule cpRule22 = new ValueCPRule(valueActualObject22, valueExpectedObject22, StringCP.EqualTo, "=", false);
            activity.AddCheckpointRule(cpRule22);

            // Checkpoint 23
            IVTDGetter actualValueGetter23 = new VTDXPathGetter(new VTDPropertyInfoBase("XMLResponse", "/*[local-name(.)='Object'][1]/*[local-name(.)='dealer'][1]/*[local-name(.)='name'][1]"), XmlTypeCode.String, false);
            IVTDSetter actualValueSetter23 = new VTDCheckpointSetter(XmlTypeCode.String);
            BindDirection actualBindDirection23 = new BindDirection(_flow.HTTPActivity4, actualValueGetter23, actualValueSetter23);
            CpValObj valueActualObject23 = new CpValObj(actualBindDirection23, XmlTypeCode.String, false);
            CpValObj valueExpectedObject23 = new CpValObj("Mountain Motors Inc", XmlTypeCode.String);
            ValueCPRule cpRule23 = new ValueCPRule(valueActualObject23, valueExpectedObject23, StringCP.EqualTo, "=", false);
            activity.AddCheckpointRule(cpRule23);

            // Checkpoint 24
            IVTDGetter actualValueGetter24 = new VTDXPathGetter(new VTDPropertyInfoBase("XMLResponse", "/*[local-name(.)='Object'][1]/*[local-name(.)='dealer'][1]/*[local-name(.)='state'][1]"), XmlTypeCode.String, false);
            IVTDSetter actualValueSetter24 = new VTDCheckpointSetter(XmlTypeCode.String);
            BindDirection actualBindDirection24 = new BindDirection(_flow.HTTPActivity4, actualValueGetter24, actualValueSetter24);
            CpValObj valueActualObject24 = new CpValObj(actualBindDirection24, XmlTypeCode.String, false);
            CpValObj valueExpectedObject24 = new CpValObj("CO", XmlTypeCode.String);
            ValueCPRule cpRule24 = new ValueCPRule(valueActualObject24, valueExpectedObject24, StringCP.EqualTo, "=", false);
            activity.AddCheckpointRule(cpRule24);

            // Checkpoint 25
            IVTDGetter actualValueGetter25 = new VTDXPathGetter(new VTDPropertyInfoBase("XMLResponse", "/*[local-name(.)='Object'][1]/*[local-name(.)='dealer'][1]/*[local-name(.)='telephone'][1]"), XmlTypeCode.String, false);
            IVTDSetter actualValueSetter25 = new VTDCheckpointSetter(XmlTypeCode.String);
            BindDirection actualBindDirection25 = new BindDirection(_flow.HTTPActivity4, actualValueGetter25, actualValueSetter25);
            CpValObj valueActualObject25 = new CpValObj(actualBindDirection25, XmlTypeCode.String, false);
            CpValObj valueExpectedObject25 = new CpValObj("303-222-8766", XmlTypeCode.String);
            ValueCPRule cpRule25 = new ValueCPRule(valueActualObject25, valueExpectedObject25, StringCP.EqualTo, "=", false);
            activity.AddCheckpointRule(cpRule25);

            // Checkpoint 26
            IVTDGetter actualValueGetter26 = new VTDXPathGetter(new VTDPropertyInfoBase("XMLResponse", "/*[local-name(.)='Object'][1]/*[local-name(.)='dealer'][1]/*[local-name(.)='website'][1]"), XmlTypeCode.String, false);
            IVTDSetter actualValueSetter26 = new VTDCheckpointSetter(XmlTypeCode.String);
            BindDirection actualBindDirection26 = new BindDirection(_flow.HTTPActivity4, actualValueGetter26, actualValueSetter26);
            CpValObj valueActualObject26 = new CpValObj(actualBindDirection26, XmlTypeCode.String, false);
            CpValObj valueExpectedObject26 = new CpValObj("www.mmdenver.com", XmlTypeCode.String);
            ValueCPRule cpRule26 = new ValueCPRule(valueActualObject26, valueExpectedObject26, StringCP.EqualTo, "=", false);
            activity.AddCheckpointRule(cpRule26);

            // Checkpoint 27
            IVTDGetter actualValueGetter27 = new VTDXPathGetter(new VTDPropertyInfoBase("XMLResponse", "/*[local-name(.)='Object'][1]/*[local-name(.)='dealer'][1]/*[local-name(.)='zip'][1]"), XmlTypeCode.String, false);
            IVTDSetter actualValueSetter27 = new VTDCheckpointSetter(XmlTypeCode.String);
            BindDirection actualBindDirection27 = new BindDirection(_flow.HTTPActivity4, actualValueGetter27, actualValueSetter27);
            CpValObj valueActualObject27 = new CpValObj(actualBindDirection27, XmlTypeCode.String, false);
            CpValObj valueExpectedObject27 = new CpValObj("80202", XmlTypeCode.String);
            ValueCPRule cpRule27 = new ValueCPRule(valueActualObject27, valueExpectedObject27, StringCP.EqualTo, "=", false);
            activity.AddCheckpointRule(cpRule27);

            // Checkpoint 28
            IVTDGetter actualValueGetter28 = new VTDXPathGetter(new VTDPropertyInfoBase("XMLResponse", "/*[local-name(.)='Object'][1]/*[local-name(.)='model'][1]/*[local-name(.)='class'][1]"), XmlTypeCode.String, false);
            IVTDSetter actualValueSetter28 = new VTDCheckpointSetter(XmlTypeCode.String);
            BindDirection actualBindDirection28 = new BindDirection(_flow.HTTPActivity4, actualValueGetter28, actualValueSetter28);
            CpValObj valueActualObject28 = new CpValObj(actualBindDirection28, XmlTypeCode.String, false);
            CpValObj valueExpectedObject28 = new CpValObj("com.ca.lisa.demo.CarModel", XmlTypeCode.String);
            ValueCPRule cpRule28 = new ValueCPRule(valueActualObject28, valueExpectedObject28, StringCP.EqualTo, "=", false);
            activity.AddCheckpointRule(cpRule28);

            // Checkpoint 29
            IVTDGetter actualValueGetter29 = new VTDXPathGetter(new VTDPropertyInfoBase("XMLResponse", "/*[local-name(.)='Object'][1]/*[local-name(.)='model'][1]/*[local-name(.)='id'][1]"), XmlTypeCode.UnsignedByte, false);
            IVTDSetter actualValueSetter29 = new VTDCheckpointSetter(XmlTypeCode.UnsignedByte);
            BindDirection actualBindDirection29 = new BindDirection(_flow.HTTPActivity4, actualValueGetter29, actualValueSetter29);
            CpValObj valueActualObject29 = new CpValObj(actualBindDirection29, XmlTypeCode.UnsignedByte, false);
            CpValObj valueExpectedObject29 = new CpValObj("2", XmlTypeCode.UnsignedByte);
            ValueCPRule cpRule29 = new ValueCPRule(valueActualObject29, valueExpectedObject29, PrimitiveTypeCP.EqualTo, "=", false);
            activity.AddCheckpointRule(cpRule29);

            // Checkpoint 30
            IVTDGetter actualValueGetter30 = new VTDXPathGetter(new VTDPropertyInfoBase("XMLResponse", "/*[local-name(.)='Object'][1]/*[local-name(.)='model'][1]/*[local-name(.)='fuelType'][1]"), XmlTypeCode.String, false);
            IVTDSetter actualValueSetter30 = new VTDCheckpointSetter(XmlTypeCode.String);
            BindDirection actualBindDirection30 = new BindDirection(_flow.HTTPActivity4, actualValueGetter30, actualValueSetter30);
            CpValObj valueActualObject30 = new CpValObj(actualBindDirection30, XmlTypeCode.String, false);
            CpValObj valueExpectedObject30 = new CpValObj("Gas", XmlTypeCode.String);
            ValueCPRule cpRule30 = new ValueCPRule(valueActualObject30, valueExpectedObject30, StringCP.EqualTo, "=", false);
            activity.AddCheckpointRule(cpRule30);

            // Checkpoint 31
            IVTDGetter actualValueGetter31 = new VTDXPathGetter(new VTDPropertyInfoBase("XMLResponse", "/*[local-name(.)='Object'][1]/*[local-name(.)='model'][1]/*[local-name(.)='modelYear'][1]"), XmlTypeCode.UnsignedShort, false);
            IVTDSetter actualValueSetter31 = new VTDCheckpointSetter(XmlTypeCode.UnsignedShort);
            BindDirection actualBindDirection31 = new BindDirection(_flow.HTTPActivity4, actualValueGetter31, actualValueSetter31);
            CpValObj valueActualObject31 = new CpValObj(actualBindDirection31, XmlTypeCode.UnsignedShort, false);
            CpValObj valueExpectedObject31 = new CpValObj("2013", XmlTypeCode.UnsignedShort);
            ValueCPRule cpRule31 = new ValueCPRule(valueActualObject31, valueExpectedObject31, PrimitiveTypeCP.EqualTo, "=", false);
            activity.AddCheckpointRule(cpRule31);

            // Checkpoint 32
            IVTDGetter actualValueGetter32 = new VTDXPathGetter(new VTDPropertyInfoBase("XMLResponse", "/*[local-name(.)='Object'][1]/*[local-name(.)='model'][1]/*[local-name(.)='name'][1]"), XmlTypeCode.String, false);
            IVTDSetter actualValueSetter32 = new VTDCheckpointSetter(XmlTypeCode.String);
            BindDirection actualBindDirection32 = new BindDirection(_flow.HTTPActivity4, actualValueGetter32, actualValueSetter32);
            CpValObj valueActualObject32 = new CpValObj(actualBindDirection32, XmlTypeCode.String, false);
            CpValObj valueExpectedObject32 = new CpValObj("RLX-AWD", XmlTypeCode.String);
            ValueCPRule cpRule32 = new ValueCPRule(valueActualObject32, valueExpectedObject32, StringCP.EqualTo, "=", false);
            activity.AddCheckpointRule(cpRule32);

            // Checkpoint 33
            IVTDGetter actualValueGetter33 = new VTDXPathGetter(new VTDPropertyInfoBase("XMLResponse", "/*[local-name(.)='Object'][1]/*[local-name(.)='model'][1]/*[local-name(.)='subName'][1]"), XmlTypeCode.String, false);
            IVTDSetter actualValueSetter33 = new VTDCheckpointSetter(XmlTypeCode.String);
            BindDirection actualBindDirection33 = new BindDirection(_flow.HTTPActivity4, actualValueGetter33, actualValueSetter33);
            CpValObj valueActualObject33 = new CpValObj(actualBindDirection33, XmlTypeCode.String, false);
            CpValObj valueExpectedObject33 = new CpValObj("AWD", XmlTypeCode.String);
            ValueCPRule cpRule33 = new ValueCPRule(valueActualObject33, valueExpectedObject33, StringCP.EqualTo, "=", false);
            activity.AddCheckpointRule(cpRule33);

            // Checkpoint 34
            IVTDGetter actualValueGetter34 = new VTDXPathGetter(new VTDPropertyInfoBase("XMLResponse", "/*[local-name(.)='Object'][1]/*[local-name(.)='model'][1]/*[local-name(.)='make'][1]/*[local-name(.)='class'][1]"), XmlTypeCode.String, false);
            IVTDSetter actualValueSetter34 = new VTDCheckpointSetter(XmlTypeCode.String);
            BindDirection actualBindDirection34 = new BindDirection(_flow.HTTPActivity4, actualValueGetter34, actualValueSetter34);
            CpValObj valueActualObject34 = new CpValObj(actualBindDirection34, XmlTypeCode.String, false);
            CpValObj valueExpectedObject34 = new CpValObj("com.ca.lisa.demo.CarMake", XmlTypeCode.String);
            ValueCPRule cpRule34 = new ValueCPRule(valueActualObject34, valueExpectedObject34, StringCP.EqualTo, "=", false);
            activity.AddCheckpointRule(cpRule34);

            // Checkpoint 35
            IVTDGetter actualValueGetter35 = new VTDXPathGetter(new VTDPropertyInfoBase("XMLResponse", "/*[local-name(.)='Object'][1]/*[local-name(.)='model'][1]/*[local-name(.)='make'][1]/*[local-name(.)='id'][1]"), XmlTypeCode.UnsignedByte, false);
            IVTDSetter actualValueSetter35 = new VTDCheckpointSetter(XmlTypeCode.UnsignedByte);
            BindDirection actualBindDirection35 = new BindDirection(_flow.HTTPActivity4, actualValueGetter35, actualValueSetter35);
            CpValObj valueActualObject35 = new CpValObj(actualBindDirection35, XmlTypeCode.UnsignedByte, false);
            CpValObj valueExpectedObject35 = new CpValObj("1", XmlTypeCode.UnsignedByte);
            ValueCPRule cpRule35 = new ValueCPRule(valueActualObject35, valueExpectedObject35, PrimitiveTypeCP.EqualTo, "=", false);
            activity.AddCheckpointRule(cpRule35);

            // Checkpoint 36
            IVTDGetter actualValueGetter36 = new VTDXPathGetter(new VTDPropertyInfoBase("XMLResponse", "/*[local-name(.)='Object'][1]/*[local-name(.)='model'][1]/*[local-name(.)='make'][1]/*[local-name(.)='name'][1]"), XmlTypeCode.String, false);
            IVTDSetter actualValueSetter36 = new VTDCheckpointSetter(XmlTypeCode.String);
            BindDirection actualBindDirection36 = new BindDirection(_flow.HTTPActivity4, actualValueGetter36, actualValueSetter36);
            CpValObj valueActualObject36 = new CpValObj(actualBindDirection36, XmlTypeCode.String, false);
            CpValObj valueExpectedObject36 = new CpValObj("Acura", XmlTypeCode.String);
            ValueCPRule cpRule36 = new ValueCPRule(valueActualObject36, valueExpectedObject36, StringCP.EqualTo, "=", false);
            activity.AddCheckpointRule(cpRule36);

            // Checkpoint 37
            IVTDGetter actualValueGetter37 = new VTDXPathGetter(new VTDPropertyInfoBase("XMLResponse", "/*[local-name(.)='Object'][1]/*[local-name(.)='model'][1]/*[local-name(.)='type'][1]/*[local-name(.)='class'][1]"), XmlTypeCode.String, false);
            IVTDSetter actualValueSetter37 = new VTDCheckpointSetter(XmlTypeCode.String);
            BindDirection actualBindDirection37 = new BindDirection(_flow.HTTPActivity4, actualValueGetter37, actualValueSetter37);
            CpValObj valueActualObject37 = new CpValObj(actualBindDirection37, XmlTypeCode.String, false);
            CpValObj valueExpectedObject37 = new CpValObj("com.ca.lisa.demo.CarType", XmlTypeCode.String);
            ValueCPRule cpRule37 = new ValueCPRule(valueActualObject37, valueExpectedObject37, StringCP.EqualTo, "=", false);
            activity.AddCheckpointRule(cpRule37);

            // Checkpoint 38
            IVTDGetter actualValueGetter38 = new VTDXPathGetter(new VTDPropertyInfoBase("XMLResponse", "/*[local-name(.)='Object'][1]/*[local-name(.)='model'][1]/*[local-name(.)='type'][1]/*[local-name(.)='id'][1]"), XmlTypeCode.UnsignedByte, false);
            IVTDSetter actualValueSetter38 = new VTDCheckpointSetter(XmlTypeCode.UnsignedByte);
            BindDirection actualBindDirection38 = new BindDirection(_flow.HTTPActivity4, actualValueGetter38, actualValueSetter38);
            CpValObj valueActualObject38 = new CpValObj(actualBindDirection38, XmlTypeCode.UnsignedByte, false);
            CpValObj valueExpectedObject38 = new CpValObj("7", XmlTypeCode.UnsignedByte);
            ValueCPRule cpRule38 = new ValueCPRule(valueActualObject38, valueExpectedObject38, PrimitiveTypeCP.EqualTo, "=", false);
            activity.AddCheckpointRule(cpRule38);

            // Checkpoint 39
            IVTDGetter actualValueGetter39 = new VTDXPathGetter(new VTDPropertyInfoBase("XMLResponse", "/*[local-name(.)='Object'][1]/*[local-name(.)='model'][1]/*[local-name(.)='type'][1]/*[local-name(.)='name'][1]"), XmlTypeCode.String, false);
            IVTDSetter actualValueSetter39 = new VTDCheckpointSetter(XmlTypeCode.String);
            BindDirection actualBindDirection39 = new BindDirection(_flow.HTTPActivity4, actualValueGetter39, actualValueSetter39);
            CpValObj valueActualObject39 = new CpValObj(actualBindDirection39, XmlTypeCode.String, false);
            CpValObj valueExpectedObject39 = new CpValObj("Sedan", XmlTypeCode.String);
            ValueCPRule cpRule39 = new ValueCPRule(valueActualObject39, valueExpectedObject39, StringCP.EqualTo, "=", false);
            activity.AddCheckpointRule(cpRule39);

        }
    }
}
